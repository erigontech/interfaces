syntax = "proto3";

import "google/protobuf/descriptor.proto";

package types;

option go_package = "./types;types";

/* Service-level versioning shall use a 3-part version number (M.m.p) following semver rules */
/* 1. MAJOR version (M): increment when you make incompatible changes                        */
/* 2. MINOR version (m): increment when you add functionality in backward compatible manner  */
/* 3. PATCH version (p): increment when you make backward compatible bug fixes               */

// Extensions of file-level options for service versioning: should *not* be modified
extend google.protobuf.FileOptions {
  uint32 service_major_version = 50001;
  uint32 service_minor_version = 50002;
  uint32 service_patch_version = 50003;
}

message H128 {
  uint64 hi = 1;
  uint64 lo = 2;
}

message H160 {
  H128 hi = 1;
  uint32 lo = 2;
}

message H256 {
  H128 hi = 1;
  H128 lo = 2;
}

message H512 {
  H256 hi = 1;
  H256 lo = 2;
}

message H1024 {
  H512 hi = 1;
  H512 lo = 2;
}

message H2048 {
  H1024 hi = 1;
  H1024 lo = 2;
}

// Reply message containing the current service version on the service side
message VersionReply {
  uint32 major = 1;
  uint32 minor = 2;
  uint32 patch = 3;
}

// ------------------------------------------------------------------------
// Engine API types
// See https://github.com/ethereum/execution-apis/blob/main/src/engine
message ExecutionPayload {
  uint32 version = 1; // v1 - no withdrawals, v2 - with withdrawals, v3 - with blob gas
  H256 parent_hash = 2;
  H160 coinbase = 3;
  H256 state_root = 4;
  H256 receipt_root = 5;
  H2048 logs_bloom = 6;
  H256 prev_randao = 7;
  uint64 block_number = 8;
  uint64 gas_limit = 9;
  uint64 gas_used = 10;
  uint64 timestamp = 11;
  bytes extra_data = 12;
  H256 base_fee_per_gas = 13;
  H256 block_hash = 14;
  repeated bytes transactions = 15;
  repeated Withdrawal withdrawals = 16;
  optional uint64 blob_gas_used = 17;
  optional uint64 excess_blob_gas = 18;
}

message Withdrawal {
  uint64 index = 1;
  uint64 validator_index = 2;
  H160 address = 3;
  uint64 amount = 4;
}

message BlobsBundleV1 {
  // TODO(eip-4844): define a protobuf message for type KZGCommitment
  repeated bytes commitments = 1;
  // TODO(eip-4844): define a protobuf message for type Blob
  repeated bytes blobs = 2;
  repeated bytes proofs = 3;
}

// End of Engine API types
// ------------------------------------------------------------------------

message NodeInfoPorts {
  uint32 discovery = 1;
  uint32 listener = 2;
}

message NodeInfoReply {
  string id = 1;
  string name = 2;
  string enode = 3;
  string enr = 4;
  NodeInfoPorts ports = 5;
  string listener_addr = 6;
  bytes protocols = 7;
}

message PeerInfo {
  string id = 1;
  string name = 2;
  string enode = 3;
  string enr = 4;
  repeated string caps = 5;
  string conn_local_addr = 6;
  string conn_remote_addr = 7;
  bool conn_is_inbound = 8;
  bool conn_is_trusted = 9;
  bool conn_is_static = 10;
}

message ExecutionPayloadBodyV1 {
  repeated bytes transactions = 1;
  repeated Withdrawal withdrawals = 2;
}
